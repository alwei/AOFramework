#include"stdafx.hpp"
#include"TaskSystem.hpp"


using namespace ao;


TaskSystem::TaskSystem()
{

}


TaskSystem::~TaskSystem()
{
	this->taskList.clear();
}


//------------------------------------------------------------------------------
/**	@brief		タスクの追加 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/03/21	01:21	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::PushTask(TaskObject* const _pPushTask)
{
	_pPushTask->RegisterManager(this);
	this->taskList.push_back(_pPushTask);
}


//------------------------------------------------------------------------------
/**	@brief		タスクの追加 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	01:57	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::PushTask(TaskObject* const _pPushTask,const string& _taskName)
{
	_pPushTask->SetName(_taskName);
	this->PushTask(_pPushTask);
}


//------------------------------------------------------------------------------
/**	@brief		セットアップ */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/00/00	00:00	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Setup()
{
	for (auto it : this->taskList)
		it->Setup();
}


//------------------------------------------------------------------------------
/**	@brief		初期化 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
///2015/02/22	01:22	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Initialize()
{
	for (auto it : this->taskList)
		it->Initialize();
}


//------------------------------------------------------------------------------
/**	@brief		リソースの読み込み */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:56	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::LoadResource()
{
	for (auto& it : this->taskList)
		it->LoadResource();
}


//------------------------------------------------------------------------------
/**	@brief		起動処理 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:53	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Awake()
{
	for (auto& it : this->taskList)
		it->Awake();
}


//------------------------------------------------------------------------------
/**	@brief		開始処理 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:53	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Start()
{
	for (auto& it : this->taskList)
		it->Start();
}


//------------------------------------------------------------------------------
/**	@brief		更新 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/22	01:21	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::FastUpdate()
{
	for (auto it : this->taskList)
		it->FastUpdate();
}


//------------------------------------------------------------------------------
/**	@brief		更新 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/22	01:21	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Update()
{
	for (auto it : this->taskList)
		it->Update();
}


//------------------------------------------------------------------------------
/**	@brief		更新 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/22	01:21	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::LateUpdate()
{
	for (auto it : this->taskList)
		it->LateUpdate();
}


//------------------------------------------------------------------------------
/**	@brief		プリレンダリング */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:46	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::PreRender()
{
	for (auto it : this->taskList)
		it->PreRender();
}


//------------------------------------------------------------------------------
/**	@brief		レンダリング */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:46	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Render()
{
	for (auto it : this->taskList)
		it->Render();
}


//------------------------------------------------------------------------------
/**	@brief		ポストレンダリング */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	10:46	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::PostRender()
{
	for (auto it : this->taskList)
		it->PostRender();
}


//------------------------------------------------------------------------------
/**	@brief		タスクの破棄 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/02/23	01:57	T.Aoyama	作成
//------------------------------------------------------------------------------
void TaskSystem::Destory(TaskObject* _pDestoryTask)
{
	for (auto it = this->taskList.begin(); it != this->taskList.end(); ++it)
	{
		if ((*it) == _pDestoryTask)
		{
			this->taskList.erase(it);
			return;
		}
	}
}


//------------------------------------------------------------------------------
/**	@brief		指定のタスク名でタスクオブジェクトを検索取得 */
//------------------------------------------------------------------------------
//	Date		Time	Author		Summary
//	2015/03/21	01:39	T.Aoyama	作成
//------------------------------------------------------------------------------
TaskObject* TaskSystem::SearchGetTaskObject(const string& _taskName)
{
	if (this->taskList.empty())
		return nullptr;

	for (auto& it : this->taskList)
	{
		//名前が一致していたらタスクポインタを返す
		if (!_taskName.compare(it->GetName()))
			return it;
	}

	//タスクが見つからなかった場合はnullptを返す
	return nullptr;
}