/*************************************************************
*	@file   	TaskObject.hpp
*	@brief  	TaskObjectクラスヘッダー
*	@author		Tatsunori Aoyama
*	@date		2015/02/22
*************************************************************/

#ifndef _Include_TaskObject_hpp_	// インクルードガード
#define _Include_TaskObject_hpp_

//------------------------------------------------------------
// インクルード
//------------------------------------------------------------
#include"AoObject.hpp"


namespace ao
{
	class TaskSystem;

	/*!-----------------------------------------------------------
	//	@class  TaskObject
	//	@brief  タスク追加用のオブジェクト
	//	@author	Tatsunori Aoyama
	//	@date	2015/02/22
	------------------------------------------------------------*/
	class TaskObject : public AoObject
	{
		AO_CLASS_DEFINE(AoObject);
	public:
		TaskObject();
		TaskObject(AOLPSTR _name);
		virtual ~TaskObject();

		/*!-----------------------------------------------------------
		//	@brief		タスク管理者を登録
		//	@param[in]	_pManager	管理者ポインタ
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		void RegisterManager(ao::TaskSystem* _pManager);

		/*!-----------------------------------------------------------
		//	@brief		タスクに命名
		//	@param[in]	_name	タスク名
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		void SetName(const string& _name);

		/*!-----------------------------------------------------------
		//	@brief		名前取得
		//	@return		名前（参照）
		//	@author		Tatsunori Aoyama
		//	@date		2015/03/21
		------------------------------------------------------------*/
		const string& GetName() const;

		/*!-----------------------------------------------------------
		//	@brief		セットアップ
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		virtual void Setup(){};

		/*!-----------------------------------------------------------
		//	@brief		初期化
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		virtual void Initialize(){};

		/*!-----------------------------------------------------------
		//	@brief		リソースの読み込み
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void LoadResource(){};

		/*!-----------------------------------------------------------
		//	@brief		起動処理
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		virtual void Awake(){};

		/*!-----------------------------------------------------------
		//	@brief		開始処理
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void Start(){};

		/*!-----------------------------------------------------------
		//	@brief		早期更新
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void FastUpdate(){};

		/*!-----------------------------------------------------------
		//	@brief		更新
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		virtual void Update(){};

		/*!-----------------------------------------------------------
		//	@brief		同期時の処理
		//	@author		Tatsunori Aoyama
		//	@date		2015/04/30
		------------------------------------------------------------*/
		virtual void Sync(){};

		/*!-----------------------------------------------------------
		//	@brief		遅延更新
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/22
		------------------------------------------------------------*/
		virtual void LateUpdate(){};

		/*!-----------------------------------------------------------
		//	@brief		プリレンダリング
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void PreRender(){};

		/*!-----------------------------------------------------------
		//	@brief		レンダリング
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void Render(){};

		/*!-----------------------------------------------------------
		//	@brief		ポストレンダリング
		//	@author		Tatsunori Aoyama
		//	@date		2015/02/23
		------------------------------------------------------------*/
		virtual void PostRender(){};

	protected:
		ao::TaskSystem* pTaskManager;
	};
}

#endif // _Include_TaskObject_hpp_